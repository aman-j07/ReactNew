{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/aj/Git/my-app-react-2/src/components/List.js\";\nimport React, { Component, createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.items = [];\n    this.refItem = /*#__PURE__*/createRef();\n\n    this.clickHandlerAdd = () => {\n      let item = this.refItem.current.value;\n\n      if (item === \"\") {\n        this.setState({\n          empty: \"Please enter a character!\"\n        });\n      } else {\n        this.refItem.current.value = \"\";\n        this.items.push(item);\n        this.setState({\n          items: this.items,\n          empty: \"\"\n        });\n      }\n    };\n\n    this.clickHandlerDelete = event => {\n      let id = event.target.getAttribute(\"id\");\n      this.items.splice(id, 1);\n      this.setState({\n        items: this.items,\n        empty: \"\"\n      });\n    };\n\n    this.state = {\n      items: this.items,\n      empty: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divAdd\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"item\",\n              type: \"text\",\n              placeholder: \"Enter New Item\",\n              ref: this.refItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"btnAdd\",\n              onClick: this.clickHandlerAdd,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), this.state.items.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"items\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cross\",\n                id: i,\n                onClick: this.clickHandlerDelete,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), item]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"paraEmpty\",\n        children: this.state.empty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default List;","map":{"version":3,"names":["React","Component","createRef","List","constructor","props","items","refItem","clickHandlerAdd","item","current","value","setState","empty","push","clickHandlerDelete","event","id","target","getAttribute","splice","state","render","map","i"],"sources":["/home/cedcoss/aj/Git/my-app-react-2/src/components/List.js"],"sourcesContent":["import React, { Component, createRef } from \"react\";\n\nclass List extends Component {\n  items = [];\n  refItem = createRef();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: this.items,\n      empty: \"\",\n    };\n  }\n  clickHandlerAdd = () => {\n    let item = this.refItem.current.value;\n    if (item === \"\") {\n      this.setState({\n        empty: \"Please enter a character!\",\n      });\n    } else {\n      this.refItem.current.value=\"\"\n      this.items.push(item);\n      this.setState({\n        items: this.items,\n        empty: \"\",\n      });\n    }\n  };\n  clickHandlerDelete = event => {\n    let id=event.target.getAttribute(\"id\")\n    this.items.splice(id,1);\n    this.setState({\n        items: this.items,\n        empty: \"\",\n      });\n  };\n  render() {\n    return (\n      <>\n        <div id=\"items\">\n          <div id=\"divAdd\"><div>\n            <input\n              id=\"item\"\n              type=\"text\"\n              placeholder=\"Enter New Item\"\n              ref={this.refItem}\n            />\n            <button id=\"btnAdd\" onClick={this.clickHandlerAdd}>\n              Add\n            </button></div>\n          </div>\n          {this.state.items.map((item,i) => {\n            return (\n              <>\n                <hr />\n                <div className=\"items\">\n                  <button className=\"cross\" id={i} onClick={this.clickHandlerDelete}>\n                    x\n                  </button>\n                  {item}\n                </div>\n              </>\n            );\n          })}\n        </div>\n        <p id=\"paraEmpty\">{this.state.empty}</p>\n      </>\n    );\n  }\n}\n\nexport default List;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;EAG3BG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IADiB,KAFnBC,KAEmB,GAFX,EAEW;IAAA,KADnBC,OACmB,gBADTL,SAAS,EACA;;IAAA,KAQnBM,eARmB,GAQD,MAAM;MACtB,IAAIC,IAAI,GAAG,KAAKF,OAAL,CAAaG,OAAb,CAAqBC,KAAhC;;MACA,IAAIF,IAAI,KAAK,EAAb,EAAiB;QACf,KAAKG,QAAL,CAAc;UACZC,KAAK,EAAE;QADK,CAAd;MAGD,CAJD,MAIO;QACL,KAAKN,OAAL,CAAaG,OAAb,CAAqBC,KAArB,GAA2B,EAA3B;QACA,KAAKL,KAAL,CAAWQ,IAAX,CAAgBL,IAAhB;QACA,KAAKG,QAAL,CAAc;UACZN,KAAK,EAAE,KAAKA,KADA;UAEZO,KAAK,EAAE;QAFK,CAAd;MAID;IACF,CAtBkB;;IAAA,KAuBnBE,kBAvBmB,GAuBEC,KAAK,IAAI;MAC5B,IAAIC,EAAE,GAACD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,IAA1B,CAAP;MACA,KAAKb,KAAL,CAAWc,MAAX,CAAkBH,EAAlB,EAAqB,CAArB;MACA,KAAKL,QAAL,CAAc;QACVN,KAAK,EAAE,KAAKA,KADF;QAEVO,KAAK,EAAE;MAFG,CAAd;IAID,CA9BkB;;IAGjB,KAAKQ,KAAL,GAAa;MACXf,KAAK,EAAE,KAAKA,KADD;MAEXO,KAAK,EAAE;IAFI,CAAb;EAID;;EAwBDS,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAK,EAAE,EAAC,OAAR;QAAA,wBACE;UAAK,EAAE,EAAC,QAAR;UAAA,uBAAiB;YAAA,wBACf;cACE,EAAE,EAAC,MADL;cAEE,IAAI,EAAC,MAFP;cAGE,WAAW,EAAC,gBAHd;cAIE,GAAG,EAAE,KAAKf;YAJZ;cAAA;cAAA;cAAA;YAAA,QADe,eAOf;cAAQ,EAAE,EAAC,QAAX;cAAoB,OAAO,EAAE,KAAKC,eAAlC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAPe;UAAA;YAAA;YAAA;YAAA;UAAA;QAAjB;UAAA;UAAA;UAAA;QAAA,QADF,EAYG,KAAKa,KAAL,CAAWf,KAAX,CAAiBiB,GAAjB,CAAqB,CAACd,IAAD,EAAMe,CAAN,KAAY;UAChC,oBACE;YAAA,wBACE;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAK,SAAS,EAAC,OAAf;cAAA,wBACE;gBAAQ,SAAS,EAAC,OAAlB;gBAA0B,EAAE,EAAEA,CAA9B;gBAAiC,OAAO,EAAE,KAAKT,kBAA/C;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,EAIGN,IAJH;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA,gBADF;QAWD,CAZA,CAZH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eA2BE;QAAG,EAAE,EAAC,WAAN;QAAA,UAAmB,KAAKY,KAAL,CAAWR;MAA9B;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA,gBADF;EA+BD;;AAlE0B;;AAqE7B,eAAeV,IAAf"},"metadata":{},"sourceType":"module"}