{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/aj/Git/my-app-react-2/src/components/AddItem.js\";\nimport React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport CompletedList from \"./CompletedList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddItem extends Component {\n  constructor(props) {\n    super(props);\n    this.arrTodo = [];\n    this.arrCompleted = [];\n\n    this.changeHandlerTask = () => {\n      if (this.btnAddRef.current.innerHTML === \"Add\") {\n        this.setState({\n          newTask: this.inputRef.current.value\n        });\n        this.arrTodo.push(this.inputRef.current.value);\n        this.inputRef.current.value = \"\";\n      } else if (this.btnAddRef.current.innerHTML === \"Update\") {\n        if (this.idEdit === \"incomplete-tasks\") {\n          this.arrTodo[this.indexEdit] = this.inputRef.current.value;\n        } else if (this.idEdit === \"completed-tasks\") {\n          this.arrCompleted[this.indexEdit] = this.inputRef.current.value;\n        }\n\n        this.inputRef.current.value = \"\";\n        this.btnAddRef.current.innerHTML = \"Add\";\n      }\n\n      this.setState({\n        arrTodo: this.arrTodo,\n        arrCompleted: this.arrCompleted\n      });\n    };\n\n    this.clickHandler = event => {\n      this.indexTodo = event.target.getAttribute(\"id\");\n      this.arrCompleted.push(this.arrTodo[this.indexTodo]);\n      this.arrTodo.splice(this.indexTodo, 1);\n      this.setState({\n        arrTodo: this.arrTodo,\n        arrCompleted: this.arrCompleted\n      });\n    };\n\n    this.clickHandlerUncheck = event => {\n      this.indexCompleted = event.target.getAttribute(\"id\");\n      this.arrTodo.push(this.arrCompleted[this.indexCompleted]);\n      this.arrCompleted.splice(this.indexCompleted, 1);\n      this.setState({\n        arrTodo: this.arrTodo,\n        arrCompleted: this.arrCompleted\n      });\n    };\n\n    this.clickHandlerDelete = event => {\n      let index = 0;\n      index = event.target.parentElement.getAttribute(\"id\");\n\n      if (event.target.parentElement.parentElement.getAttribute(\"id\") === \"incomplete-tasks\") {\n        this.arrTodo.splice(index, 1);\n      } else if (event.target.parentElement.parentElement.getAttribute(\"id\") === \"completed-tasks\") {\n        this.arrCompleted.splice(index, 1);\n      }\n\n      this.setState({\n        arrTodo: this.arrTodo,\n        arrCompleted: this.arrCompleted\n      });\n      console.log(\"todo=\", this.state.arrTodo, \"completed=\", this.state.arrCompleted);\n    };\n\n    this.clickHandlerEdit = event => {\n      var text = \"\";\n      text = event.target.parentElement.textContent;\n      text = text.slice(0, -10);\n      this.inputRef.current.value = text;\n      this.inputRef.current.focus();\n      this.btnAddRef.current.innerHTML = \"Update\";\n      this.indexEdit = event.target.parentElement.getAttribute(\"id\");\n      this.idEdit = event.target.parentElement.parentElement.getAttribute(\"id\");\n    };\n\n    this.state = {\n      newTask: \"\",\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted\n    };\n    this.inputRef = /*#__PURE__*/React.createRef();\n    this.btnAddRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-task\",\n          ref: this.inputRef,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addbtn\",\n          ref: this.btnAddRef,\n          onClick: this.changeHandlerTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        arrTodo: this.arrTodo,\n        clickHandler: this.clickHandler,\n        clickHandlerDelete: this.clickHandlerDelete,\n        clickHandlerEdit: this.clickHandlerEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompletedList, {\n        arrCompleted: this.arrCompleted,\n        index: this.index,\n        clickHandlerUncheck: this.clickHandlerUncheck,\n        clickHandlerDelete: this.clickHandlerDelete,\n        clickHandlerEdit: this.clickHandlerEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddItem;","map":{"version":3,"names":["React","Component","TodoList","CompletedList","AddItem","constructor","props","arrTodo","arrCompleted","changeHandlerTask","btnAddRef","current","innerHTML","setState","newTask","inputRef","value","push","idEdit","indexEdit","clickHandler","event","indexTodo","target","getAttribute","splice","clickHandlerUncheck","indexCompleted","clickHandlerDelete","index","parentElement","console","log","state","clickHandlerEdit","text","textContent","slice","focus","createRef","render"],"sources":["/home/cedcoss/aj/Git/my-app-react-2/src/components/AddItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport CompletedList from \"./CompletedList\";\n\nclass AddItem extends Component {\n  arrTodo = [];arrCompleted = [];indexTodo;indexCompleted;indexEdit;idEdit;\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTask: \"\",\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted,\n    };\n    this.inputRef = React.createRef();\n    this.btnAddRef = React.createRef();\n  }\n  changeHandlerTask = () => {\n    if (this.btnAddRef.current.innerHTML === \"Add\") {\n      this.setState({\n        newTask: this.inputRef.current.value,\n      });\n      this.arrTodo.push(this.inputRef.current.value);\n      this.inputRef.current.value = \"\";\n    } else if (this.btnAddRef.current.innerHTML === \"Update\") {\n      if (this.idEdit === \"incomplete-tasks\") {\n        this.arrTodo[this.indexEdit] = this.inputRef.current.value;\n      } else if (this.idEdit === \"completed-tasks\") {\n        this.arrCompleted[this.indexEdit] = this.inputRef.current.value;\n      }\n      this.inputRef.current.value = \"\";\n      this.btnAddRef.current.innerHTML =\"Add\"\n    }\n    this.setState({\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted,\n    })\n  };\n  clickHandler = (event) => {\n    this.indexTodo = event.target.getAttribute(\"id\");\n    this.arrCompleted.push(this.arrTodo[this.indexTodo]);\n    this.arrTodo.splice(this.indexTodo, 1);\n    this.setState({\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted,\n    });\n  };\n  clickHandlerUncheck = (event) => {\n    this.indexCompleted = event.target.getAttribute(\"id\");\n    this.arrTodo.push(this.arrCompleted[this.indexCompleted]);\n    this.arrCompleted.splice(this.indexCompleted, 1);\n    this.setState({\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted,\n    });\n  };\n  clickHandlerDelete = (event) => {\n    let index = 0;\n    index = event.target.parentElement.getAttribute(\"id\");\n    if (\n      event.target.parentElement.parentElement.getAttribute(\"id\") ===\n      \"incomplete-tasks\"\n    ) {\n      this.arrTodo.splice(index, 1);\n    } else if (\n      event.target.parentElement.parentElement.getAttribute(\"id\") ===\n      \"completed-tasks\"\n    ) {\n      this.arrCompleted.splice(index, 1);\n    }\n    this.setState({\n      arrTodo: this.arrTodo,\n      arrCompleted: this.arrCompleted,\n    });\n    console.log(\n      \"todo=\",\n      this.state.arrTodo,\n      \"completed=\",\n      this.state.arrCompleted\n    );\n  };\n  clickHandlerEdit = (event) => {\n    var text = \"\";\n    text = event.target.parentElement.textContent;\n    text = text.slice(0, -10);\n    this.inputRef.current.value = text;\n    this.inputRef.current.focus();\n    this.btnAddRef.current.innerHTML = \"Update\";\n    this.indexEdit = event.target.parentElement.getAttribute(\"id\");\n    this.idEdit = event.target.parentElement.parentElement.getAttribute(\"id\");\n  };\n\n  render() {\n    return (\n      <>\n        <h2>TODO LIST</h2>\n        <h3>Add Item</h3>\n        <p>\n          <input id=\"new-task\" ref={this.inputRef} type=\"text\" />\n          <button\n            id=\"addbtn\"\n            ref={this.btnAddRef}\n            onClick={this.changeHandlerTask}\n          >\n            Add\n          </button>\n        </p>\n        <TodoList\n          arrTodo={this.arrTodo}\n          clickHandler={this.clickHandler}\n          clickHandlerDelete={this.clickHandlerDelete}\n          clickHandlerEdit={this.clickHandlerEdit}\n        />\n        <CompletedList\n          arrCompleted={this.arrCompleted}\n          index={this.index}\n          clickHandlerUncheck={this.clickHandlerUncheck}\n          clickHandlerDelete={this.clickHandlerDelete}\n          clickHandlerEdit={this.clickHandlerEdit}\n        />\n      </>\n    );\n  }\n}\n\nexport default AddItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}